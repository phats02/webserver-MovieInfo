-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."CASTS"
(
    "Id" character(9)[] COLLATE pg_catalog."default" NOT NULL,
    "Image" character(300)[] COLLATE pg_catalog."default",
    "LegacyNameText" character(150)[] COLLATE pg_catalog."default",
    "Name" character(150)[] COLLATE pg_catalog."default" NOT NULL,
    "BirthDate" date,
    "BirthPlace" character(150)[] COLLATE pg_catalog."default",
    "Gender" boolean,
    "HeightCentimeters" double precision,
    "Nicknames" character(200)[] COLLATE pg_catalog."default",
    "RealName" character(150)[] COLLATE pg_catalog."default",
    CONSTRAINT "CASTS_pkey" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."CASTSINMOVIE"
(
    "MovieID" character(9)[] COLLATE pg_catalog."default" NOT NULL,
    "CastID" character(9)[] COLLATE pg_catalog."default" NOT NULL,
    "Characters" character(150)[] COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "CASTSINMOVIE_pkey" PRIMARY KEY ("CastID", "MovieID", "Characters")
);

CREATE TABLE IF NOT EXISTS public."MOVIES"
(
    "Id" character(9)[] COLLATE pg_catalog."default" NOT NULL,
    "Img" character(300)[] COLLATE pg_catalog."default",
    "Title" character(150)[] COLLATE pg_catalog."default" NOT NULL,
    "Year" smallint,
    "TopRank" smallint,
    "Rating" double precision,
    "RatingCount" integer,
    "Genres" character(150)[] COLLATE pg_catalog."default",
    "Synopses" json,
    CONSTRAINT "MOVIES_pkey" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."REVIEWS"
(
    "Id" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( CYCLE INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Author" character(150)[] COLLATE pg_catalog."default" NOT NULL,
    "AuthorRating" smallint,
    "HelpfulnessScore" double precision,
    "InterestingVotes" json,
    "LanguageCode" character(5)[] COLLATE pg_catalog."default",
    "ReviewText" character(2000)[] COLLATE pg_catalog."default",
    "ReviewTitle" character(300)[] COLLATE pg_catalog."default",
    "SubmissionDate" date,
    "Movie" character(9)[] NOT NULL,
    CONSTRAINT "REVIEWS_pkey" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."USERS"
(
    username character(30)[] COLLATE pg_catalog."default" NOT NULL,
    password character(128)[] COLLATE pg_catalog."default",
    CONSTRAINT "USERS_pkey" PRIMARY KEY (username)
);

CREATE TABLE IF NOT EXISTS public."FAVOURITEMOVIES"
(
    "User" character(30)[] COLLATE pg_catalog."default" NOT NULL,
    "Movie" character(9)[] COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "FAVOURITEMOVIES_pkey" PRIMARY KEY ("User", "Movie")
);

ALTER TABLE IF EXISTS public."CASTSINMOVIE"
    ADD CONSTRAINT movie FOREIGN KEY ("MovieID")
    REFERENCES public."MOVIES" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."CASTSINMOVIE"
    ADD CONSTRAINT "cast" FOREIGN KEY ("CastID")
    REFERENCES public."CASTS" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."REVIEWS"
    ADD CONSTRAINT movie FOREIGN KEY ("Movie")
    REFERENCES public."MOVIES" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."FAVOURITEMOVIES"
    ADD CONSTRAINT movie FOREIGN KEY ("Movie")
    REFERENCES public."MOVIES" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."FAVOURITEMOVIES"
    ADD CONSTRAINT "user" FOREIGN KEY ("User")
    REFERENCES public."USERS" (username) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;